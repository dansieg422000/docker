{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset204 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28480\viewh4420\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 FROM - must be the first command in your Dockerfile\
Sample: FROM java:8\
\
MAINTAINER - defines the author of this Dockerfile \
Sample: MAINTAINER Firstname Lastname <email@yahoo.com>\
\
RUN - runs the command line, waits for it to finish and saves the result\
Sample - RUN unzip install.zip /opt/install\
                RUN echo hello docker\
\
ADD - adds a local files, adds the contents of tar archives, works with URLs as well\
Sample - ADD run.sh /run.sh\
               ADD project.tar.gz /install/\
                ADD https://project.example.com/download/project.rpm /project/\
\
\
ENV - sets the environment variables both during the build and when running the result\
Sample - ENV DB_HOST=db.production.example.com\
                ENV DB_PORT=5432\
\
ENTRYPOINT - specifies the start of the command to run, if your container acts like a command-line program, you can use ENTRYPOINT\
Sample - \
\
CMD - specifies the whole command to run\
Sample - \
\
Shell Form VS Exec Form\
- ENTRYPOINT RUN and CMD can use either form\
\
Shell Form \
Sample - nano notes.txt\
\
Exec Form \
Sample - [\'93/bin/nano\'94, \'93notes.txt\'94]\
\
EXPOSE \
Sample - EXPOSE 8080\
                -p 1234:1234\
\
VOLUME - defines shared or ephemeral volumes, avoid defining shared folders in Dockerfiles\
Sample - VOLUME [\'93/host/path/\'94, \'93/container/path/\'94]\
               VOLUME [\'93/shared-data\'94]\
\
WORKDIR - sets the directory the container starts in\
Sample - WORKDIR /install/\
\
USER - sets which user the container will run as\
Sample - USER user1\
                USER 1000\
\
Reference: https://docs.docker.com/engine/reference/builder/\
\
\
\
\
\
}