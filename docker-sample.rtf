
-- Sample network : Two way communication —
Terminal 1
 docker network create example-network		                                                - create a private network named example-network
 docker run —-rm -ti -—net=example-network —-name server ubuntu:14.04 bash                  - run the example-network
 nc -lp 1234									                                            - listen the example-network to port 1234

Terminal 2
 docker run -—rm -ti —-link server —-net=example —-name client ubuntu:14.04 bash            - client of example-network
 nc server 1234				                                                                - listen to port 1234

—- IP Address Binding in Your Services —-
 docker run -p 127.0.0.1:1234:1234/tcp	                                                    - to allow connections, you need to use the bind address “0.0.0.0” inside the container

—- Volumes: virtual disc to store and share data (Persistent - permanent, Ephemeral - not permanent) —-
   Note: This is useful for creating Virtual Machine
1. Create a file or folder
  mkdir sample-folder

2. docker run -ti -v /Users/ronaldolay/docker-sample-folder:/shared-folder ubuntu:14.04 bash
   docker run -ti -v  (docker command)
   /Users/ronaldolay/docker-sample-folder:/shared-folder  (full path of the folder or files that will be share)
   ubuntu:14.04 (docker image)

3. To create a file (inside docker container)
   ls /shared-folder
   cd shared-folder
   touch my-date (once inside the container, create a sample file)

4. To check (exit the container)
   go the the folder that is shared to the container (docker-sample-folder)

— Sharing Data between containers (Open 2 terminal)—
Terminal 1:
 docker run -ti -v /shared-data ubuntu:14.04 bash
 echo hello > /shared-data/data-file   (will create a file data-file and write hello)

Terminal 2:
 docker run -ti —volumes-from name-of-the-container ubuntu:14.04 bash
 echo welcome > /shared-data/new-file


-- Modifying Image Layers --
- docker build -f dd-docker -t ubuntu:v2
- docker image history ubuntu:v2

-- To reduce image size --
1st Option
- docker version (check Experimental: true)
- docker build --squash -f dd-docker -t ubuntu:v3
- docker image history ubuntu:v3

2nd Option
 - docker container run -d nginx
 - docker container export jovial_jackson > nginx.tar
 - docker image import nginx.tar
 - docker image ls
 - docker tag hashID tagName

-- What is Docker Registry - a stateless highly scalable application that stores in the cloud --
 - Docker Registry (local open-source registry)
 - Docker Truster Registry (DTR) (Enterprise Edition)
 - Docker Hub

-- Deploying a Registry --
 Reference: https://docs.docker.com/registry



























