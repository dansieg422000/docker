# SOLR
#
# See https://github.com/docker-solr/docker-solr/blob/1c2f9a0791e854c05c41952d5a086d57ebadc5f2/5.4/alpine/Dockerfile
FROM elmo-base-service-jre8

# Override the solr download location with e.g.:
#   docker build -t mine --build-arg SOLR_DOWNLOAD_SERVER=http://www-eu.apache.org/dist/lucene/solr .
ARG SOLR_DOWNLOAD_SERVER

# Override the GPG keyserver with e.g.:
#   docker build -t mine --build-arg GPG_KEYSERVER=hkp://eu.pool.sks-keyservers.net .
ARG GPG_KEYSERVER

RUN apk add --no-cache \
        lsof \
        gnupg \
        tar \
        bash \
        ca-certificates \
        curl \
     && update-ca-certificates

ENV SOLR_USER solr
ENV SOLR_UID 8983

RUN addgroup -S -g $SOLR_UID $SOLR_USER && \
  adduser -S -u $SOLR_UID -g $SOLR_USER $SOLR_USER

ENV SOLR_KEY E6E21FFCDCEA14C95910EA65051A0FAF76BC6507
RUN gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$SOLR_KEY"
ENV GPG_KEYSERVER ${GPG_KEYSERVER:-hkp://ha.pool.sks-keyservers.net}
RUN gpg --keyserver "$GPG_KEYSERVER" --recv-keys "$SOLR_KEY"

ENV SOLR_VERSION 5.4.1
ENV SOLR_SHA256 3e4b4ec7bd728b49b2ebc3dbe8f3d1ef89fded4ab86b9e2f856bedd58c99f28b
ENV SOLR_URL ${SOLR_DOWNLOAD_SERVER:-https://archive.apache.org/dist/lucene/solr}/$SOLR_VERSION/solr-$SOLR_VERSION.tgz
ENV PATH /opt/solr/bin:/opt/docker-solr/scripts:$PATH

# Install Solr
RUN mkdir -p /opt/solr && \
    curl -sSLo /opt/solr.tgz ${SOLR_URL} && \
    curl -sSLo /opt/solr.tgz.asc ${SOLR_URL}.asc && \
    echo "$SOLR_SHA256 */opt/solr.tgz" | sha256sum -c - && \
    (>&2 ls -l /opt/solr.tgz /opt/solr.tgz.asc) && \
    gpg --batch --verify /opt/solr.tgz.asc /opt/solr.tgz && \
    tar -C /opt/solr --extract --file /opt/solr.tgz --strip-components=1 && \
    rm /opt/solr.tgz* && \
    mkdir -p /opt/solr/server/solr/lib /opt/solr/server/solr/mycores && \
    sed -i -e 's/#SOLR_PORT=8983/SOLR_PORT=8983/' /opt/solr/bin/solr.in.sh && \
    sed -i -e '/-Dsolr.clustering.enabled=true/ a SOLR_OPTS="$SOLR_OPTS -Dsun.net.inetaddr.ttl=60 -Dsun.net.inetaddr.negative.ttl=60"' /opt/solr/bin/solr.in.sh && \
    chown -R $SOLR_USER:$SOLR_USER /opt/solr && \
    mkdir /docker-entrypoint-initdb.d /opt/docker-solr/

# Copy basic config to elmo_tms config
RUN cp -r /opt/solr/server/solr/configsets/basic_configs /opt/solr/server/solr/configsets/elmo_tms

# Copy customisations
COPY root/ /
RUN chmod +x /entrypoint.sh

WORKDIR /opt/solr

# Fix permissions for Solr
RUN chown -R $SOLR_USER:$SOLR_USER /opt/solr && \
    chown -R $SOLR_USER:$SOLR_USER /opt/docker-solr

# Provision dev/test cores for TMS.
# There's an extra sleep because the port becomes visible before it's listener. A tiny delay fixes this.
USER solr
RUN /opt/solr/bin/solr start \
    && sleep 5 \
    && /opt/solr/bin/solr create_core -c dev -d /opt/solr/server/solr/configsets/elmo_tms \
    && /opt/solr/bin/solr create_core -c test  -d /opt/solr/server/solr/configsets/elmo_tms \
    && echo "Solr Cores Configured"

EXPOSE 8983

USER root

ENTRYPOINT ["/entrypoint.sh", "solr"]
