Volumes and Bind Mounting

-- Option for Data Storage with Containers --

1. Volumes - The recommended way to persists data, store at /var/lib/docker/volumes
    Ref: https://docs.docker.com/storage/volumes
    - docker volume ls
    - docker container run -d --mount source=source-location,target=/target-location nginx

2. Bind Mounts - Have limited functionality and yo must use the exact file path oh the host;
    - volumes recommended

3. tmpfs mounts - Stored only in a host's memory in linux (least recommended)

Block vs Object Storage
- Block
 - Fixed chuncks of data
 - No metadata is stored
 - SAN storage uses block storage protocols liki iSCSI

Object
 - Data is stored with metadata and a unique identifier
 - There is no organization to the objects
 - Scalability is limitless
 - Accessed with HTTP calls
 - Amazon S3 is an example


 -- Docker Storage Drivers --
 Reference: https://docs.docker.com/storage/storagedriver/select-storage-driver/

 -- Change storage driver --
 Ref: https://docs.docker.com/storage/storagedriver/overlayfs-driver
 - docker info | more
 Steps:
 - sudo systemctl stop docker
 - sudo cp -au /var/lib/docker $HOME
 - nano /etc/docker/daemon.json   (will open a json file and add the config below)
  "storage-driver":"overlay"
 - sudo systemctl start docker

- Getting the mount order correct
- Mounting volumes--always mounts the host's filesystem over the guest


Step 1. Open a terminal then run
 docker run -ti --rm --privileged=true ubuntu bash

 Step 2. Same terminal make a directory and change directory
  mkdir example
  cd example
  ls

 Step 3. Make a directory again inside example and change directory
  mkdir work
  touch a b c d e f

 Step 4. Go back to base directory and make a directory again
  cd ..
  mkdir other-work

 Step 5. Change directory to other-work and create another files
  touch other-a other-b other-c other-d
  ls

 Step 6. Go back to example directory and display all the files
  ls -R

 Step 7. Mounting a directory
  mount -o bind other-work work

 Step 8. To unmount it, run the command below
  unmount work
  ls -R

-- Device Mapper --
Ref: https://docs.docker.com/storage/storagedriver/device-mapper-driver
 
-- Configure Device Mapper --
 - sudo systemctl stop docker
 - sudo nano /etc/docker/d
 - nano /etc/docker/daemon.json   (will open a json file and add the config below)
 - "storage-driver":"devicemapper"
 - cat /etc/docker/daemon
 - sudo systemctl start docker
 - docker version
 - docker info | grep storage








